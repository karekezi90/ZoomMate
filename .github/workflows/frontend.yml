name: Frontend CI

on: 
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
    branches: 
      - main
  pull_request:
    paths:
      - 'frontend/**'

permissions:
  id-token: write         
  contents: read

env:
  AWS_REGION: ap-southeast-2
  S3_BUCKET: ohabimana
  CLOUDFRONT_DISTRIBUTION_ID: E2HK00E8Z5JOL7

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults: 
      run: 
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci

      - name: Build 
        run: npm run build

      - name: Configure AWS credentials (keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Determine build directory
        id: detect_build_dir
        run: |
          if [ -d dist ]; then
            echo "dir=dist" >> $GITHUB_OUTPUT
          elif [ -d build ]; then
            echo "dir=build" >> $GITHUB_OUTPUT
          else
            echo "No dist/ or build/ folder found!" >&2
            exit 1
          fi

      - name: Upload assets to S3 (long-cache)
        run: |
          aws s3 sync "${{ steps.detect_build_dir.outputs.dir }}/" "s3://${{ env.S3_BUCKET }}/" \
            --delete \
            --exclude "index.html" --exclude "*.html" \
            --cache-control "public,max-age=31536000,immutable" \
            --only-show-errors

      - name: Upload HTML to S3 (no-cache)
        run: |
          find "${{ steps.detect_build_dir.outputs.dir }}" -name "*.html" -print0 | \
            xargs -0 -I {} aws s3 cp "{}" "s3://${{ env.S3_BUCKET }}/{}/" \
              --cache-control "no-store" \
              --content-type "text/html; charset=utf-8" \
              --only-show-errors
      
      - name: Invalidate CloudFront
        if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ env.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/*"